" Establecer la tecla líder como espacio 
let mapleader=" "

" Configuración básica
set number
set mouse=a
set numberwidth=1
set clipboard=unnamed
syntax enable
set showcmd
set ruler
set cursorline
set encoding=utf-8
set sw=4
set tabstop=4       " Número de espacios que un tabulador representa
set shiftwidth=4    " Número de espacios utilizados para (auto) indentación
set expandtab       " Convertir tabuladores en espacios
set relativenumber
set laststatus=2
set autoread

" Configuración de vim-plug
call plug#begin('~/.vim/plugged')

" Temas y plugins
Plug 'dracula/vim', {'as': 'dracula'}
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'christoomey/vim-tmux-navigator'
Plug 'voldikss/vim-floaterm'

call plug#end()

" Configuración del tema
colorscheme dracula
let g:dracula_colorterm = 0
let g:dracula_contrast = "high"

" Forzar fondo negro puro
autocmd VimEnter * hi Normal guibg=black ctermbg=black
autocmd VimEnter * hi NonText guibg=black ctermbg=black
autocmd VimEnter * hi EndOfBuffer guibg=black ctermbg=black

" Eliminar ^M al leer o escribir un archivo
autocmd BufReadPost * silent! %s/\r//ge
autocmd BufWritePre * silent! %s/\r//ge

" Configuración de EasyMotion
let g:EasyMotion_leader_key = '<Leader>'
nmap <Leader>s <Plug>(easymotion-s2)
" Resaltar las palabras visibles hacia adelante y hacia atrás desde la posición del cursor
nmap <Leader>w <Plug>(easymotion-bd-w)
" Resaltar todas las palabras en la ventana actual
nmap <Leader>e <Plug>(easymotion-overwin-w)

" Configuración de NerdTree
nmap <Leader>nt :NERDTreeToggle<CR>   " Activa/desactiva NERDTree con <Leader>nt
nmap <Leader>nf :NERDTreeFind<CR>     " Encuentra el archivo actual en NERDTree con <Leader>nf

" Abre NERDTree automáticamente al iniciar Vim si no se ha abierto un archivo específico
autocmd VimEnter * if !argc() | NERDTree | endif

" Cierra Vim si NERDTree es la única ventana abierta
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | q | endif

" Mapas de teclado adicionales para ajustar el tamaño de ventanas
nnoremap <Leader>w> :vertical resize +5<CR>   " Aumenta el tamaño de la ventana actual hacia la derecha
nnoremap <Leader>w< :vertical resize -5<CR>   " Disminuye el tamaño de la ventana actual hacia la izquierda
nnoremap <Leader>w+ :resize +5<CR>            " Aumenta el tamaño de la ventana actual hacia abajo
nnoremap <Leader>w- :resize -5<CR>            " Disminuye el tamaño de la ventana actual hacia arriba

" Configuración para alternar el ajuste de línea
nnoremap <Leader>wr :set wrap<CR>
nnoremap <Leader>wn :set nowrap<CR>
" Recargar automáticamente el archivo si ha cambiado en el sistema de archivos
autocmd BufEnter * checktime

" Mostrar un mensaje cuando el archivo se ha recargado
autocmd FileChangedShellPost * echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None

" Mapas de teclado para copiar al portapapeles
vmap <Leader>y "+y

" Mapeo para abrir la terminal en nvim
nmap <Leader>tt :FloatermNew<CR>

" Configuración de Floaterm
let g:floaterm_keymap_new    = '<leader>fn'
let g:floaterm_keymap_toggle = '<leader>ft'
let g:floaterm_keymap_prev   = '<leader>fp'
let g:floaterm_keymap_next   = '<leader>fn'

" Reprogramar la combinación de teclas para salir del modo terminal
tnoremap <C-t> <C-\><C-n>

" para pegar con yy en lugar de "+yy _
nmap <Leader>yy "+yy

" LA SIGUIENTE CONFIGURACION SOLO ES PARA LUBUNTU
" NUNCA BORRAR ESTO DE LUBUNTU
" Moverse entre ventanas" Moverse entre ventanas
nnoremap <Leader>h :wincmd h<CR>
nnoremap <Leader>j :wincmd j<CR>
nnoremap <Leader>k :wincmd k<CR>
nnoremap <Leader>l :wincmd l<CR>

Plug 'ThePrimeagen/vim-be-good'

" NERD Commenter
Plug 'preservim/nerdcommenter'
filetype plugin on
" Create default mappings
let g:NERDCreateDefaultMappings = 1

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1

" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" Enable NERDCommenterToggle to check all selected lines is commented or not 
let g:NERDToggleCheckAllLines = 1


" Plug 'jupyter-vim/jupyter-vim'
"
" Configuraciones de jupiter notebooks
"if has('nvim')
    "let g:python3_host_prog = '/path/to/python/bin/python3'
"else
"    set pyxversion=3
"endif

"let g:python3_host_prog = '/usr/bin/python3'

" Always use the same virtualenv for vim, regardless of what Python
" environment is loaded in the shell from which vim is launched
"let g:vim_virtualenv_path = '/path/to/my/new/vim_virtualenv'
"if exists('g:vim_virtualenv_path')
"    pythonx import os; import vim
"    pythonx activate_this = os.path.join(vim.eval('g:vim_virtualenv_path'), 'bin/activate_this.py')
"    pythonx with open(activate_this) as f: exec(f.read(), {'__file__': activate_this})
"endif

call plug#end()


