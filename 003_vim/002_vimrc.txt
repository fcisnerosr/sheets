" Establecer la tecla líder como espacio 
let mapleader=" "

" Configuración básica
set number
set mouse=a
set numberwidth=1
set clipboard=unnamed
syntax enable
set showcmd
set ruler
set cursorline
set encoding=utf-8
set sw=4
set tabstop=4       " Número de espacios que un tabulador representa
set shiftwidth=4    " Número de espacios utilizados para (auto) indentación
set expandtab       " Convertir tabuladores en espacios
set relativenumber
set laststatus=2

" Configuración de vim-plug
call plug#begin('~/.vim/plugged')

" Temas y plugins
Plug 'dracula/vim', {'as': 'dracula'}
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

" Configuración del tema
colorscheme dracula
let g:dracula_colorterm = 0
let g:dracula_contrast = "high"

" Forzar fondo negro puro
autocmd VimEnter * hi Normal guibg=black ctermbg=black
autocmd VimEnter * hi NonText guibg=black ctermbg=black
autocmd VimEnter * hi EndOfBuffer guibg=black ctermbg=black

" Eliminar ^M al leer o escribir un archivo
autocmd BufReadPost * silent! %s/\r//ge
autocmd BufWritePre * silent! %s/\r//ge

" Configuración de EasyMotion
let g:EasyMotion_leader_key = '<Leader>'
nmap <Leader>s <Plug>(easymotion-s2)

" Configuración de NerdTree
nmap <Leader>nt :NERDTreeToggle<CR>   " Activa/desactiva NERDTree con <Leader>nt
nmap <Leader>nf :NERDTreeFind<CR>     " Encuentra el archivo actual en NERDTree con <Leader>nf

" Abre NERDTree automáticamente al iniciar Vim si no se ha abierto un archivo específico
autocmd vimenter * if !argc() | NERDTree | endif

" Cierra Vim si NERDTree es la única ventana abierta
autocmd bufenter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | q | endif

" Mapas de teclado adicionales para ajustar el tamaño de ventanas
nnoremap <Leader>w> :vertical resize +5<CR>   " Aumenta el tamaño de la ventana actual hacia la derecha
nnoremap <Leader>w< :vertical resize -5<CR>   " Disminuye el tamaño de la ventana actual hacia la izquierda
nnoremap <Leader>w+ :resize +5<CR>            " Aumenta el tamaño de la ventana actual hacia abajo
nnoremap <Leader>w- :resize -5<CR>            " Disminuye el tamaño de la ventana actual hacia arriba

" Configuración de EasyMotion para moverse en la parte superior del texto
let g:EasyMotion_leader_key = '<Leader>'
" Resaltar las palabras visibles hacia adelante y hacia atrás desde la posición del cursor
nmap <Leader>w <Plug>(easymotion-bd-w)
" Resaltar todas las palabras en la ventana actual
nmap <Leader>e <Plug>(easymotion-overwin-w)

" Configuración para alternar el ajuste de línea
nnoremap <Leader>wr :set wrap<CR>
nnoremap <Leader>wn :set nowrap<CR>

" Recargar automáticamente el archivo si ha cambiado en el sistema de archivos
set autoread
autocmd BufEnter * checktime

" Mostrar un mensaje cuando el archivo se ha recargado
autocmd FileChangedShellPost * echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None
